// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	metav1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// VpcEgressGatewaySelectorApplyConfiguration represents a declarative configuration of the VpcEgressGatewaySelector type for use
// with apply.
type VpcEgressGatewaySelectorApplyConfiguration struct {
	NamespaceSelector *metav1.LabelSelectorApplyConfiguration `json:"namespaceSelector,omitempty"`
	PodSelector       *metav1.LabelSelectorApplyConfiguration `json:"podSelector,omitempty"`
}

// VpcEgressGatewaySelectorApplyConfiguration constructs a declarative configuration of the VpcEgressGatewaySelector type for use with
// apply.
func VpcEgressGatewaySelector() *VpcEgressGatewaySelectorApplyConfiguration {
	return &VpcEgressGatewaySelectorApplyConfiguration{}
}

// WithNamespaceSelector sets the NamespaceSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NamespaceSelector field is set to the value of the last call.
func (b *VpcEgressGatewaySelectorApplyConfiguration) WithNamespaceSelector(value *metav1.LabelSelectorApplyConfiguration) *VpcEgressGatewaySelectorApplyConfiguration {
	b.NamespaceSelector = value
	return b
}

// WithPodSelector sets the PodSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PodSelector field is set to the value of the last call.
func (b *VpcEgressGatewaySelectorApplyConfiguration) WithPodSelector(value *metav1.LabelSelectorApplyConfiguration) *VpcEgressGatewaySelectorApplyConfiguration {
	b.PodSelector = value
	return b
}
