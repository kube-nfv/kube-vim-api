// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// VpcDNSStatusApplyConfiguration represents a declarative configuration of the VpcDNSStatus type for use
// with apply.
type VpcDNSStatusApplyConfiguration struct {
	Conditions []ConditionApplyConfiguration `json:"conditions,omitempty"`
	Active     *bool                         `json:"active,omitempty"`
}

// VpcDNSStatusApplyConfiguration constructs a declarative configuration of the VpcDNSStatus type for use with
// apply.
func VpcDNSStatus() *VpcDNSStatusApplyConfiguration {
	return &VpcDNSStatusApplyConfiguration{}
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *VpcDNSStatusApplyConfiguration) WithConditions(values ...*ConditionApplyConfiguration) *VpcDNSStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}

// WithActive sets the Active field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Active field is set to the value of the last call.
func (b *VpcDNSStatusApplyConfiguration) WithActive(value bool) *VpcDNSStatusApplyConfiguration {
	b.Active = &value
	return b
}
