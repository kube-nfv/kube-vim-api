// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	kubeovnv1 "github.com/kube-nfv/kube-vim-api/kube-ovn-api/pkg/apis/kubeovn/v1"
)

// VpcEgressGatewayStatusApplyConfiguration represents a declarative configuration of the VpcEgressGatewayStatus type for use
// with apply.
type VpcEgressGatewayStatusApplyConfiguration struct {
	// used by the scale subresource
	Replicas      *int32  `json:"replicas,omitempty"`
	LabelSelector *string `json:"labelSelector,omitempty"`
	// whether the egress gateway is ready
	Ready *bool            `json:"ready,omitempty"`
	Phase *kubeovnv1.Phase `json:"phase,omitempty"`
	// internal/external IPs used by the workload
	InternalIPs []string              `json:"internalIPs,omitempty"`
	ExternalIPs []string              `json:"externalIPs,omitempty"`
	Conditions  *kubeovnv1.Conditions `json:"conditions,omitempty"`
	// workload information
	Workload *VpcEgressWorkloadApplyConfiguration `json:"workload,omitempty"`
}

// VpcEgressGatewayStatusApplyConfiguration constructs a declarative configuration of the VpcEgressGatewayStatus type for use with
// apply.
func VpcEgressGatewayStatus() *VpcEgressGatewayStatusApplyConfiguration {
	return &VpcEgressGatewayStatusApplyConfiguration{}
}

// WithReplicas sets the Replicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Replicas field is set to the value of the last call.
func (b *VpcEgressGatewayStatusApplyConfiguration) WithReplicas(value int32) *VpcEgressGatewayStatusApplyConfiguration {
	b.Replicas = &value
	return b
}

// WithLabelSelector sets the LabelSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LabelSelector field is set to the value of the last call.
func (b *VpcEgressGatewayStatusApplyConfiguration) WithLabelSelector(value string) *VpcEgressGatewayStatusApplyConfiguration {
	b.LabelSelector = &value
	return b
}

// WithReady sets the Ready field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Ready field is set to the value of the last call.
func (b *VpcEgressGatewayStatusApplyConfiguration) WithReady(value bool) *VpcEgressGatewayStatusApplyConfiguration {
	b.Ready = &value
	return b
}

// WithPhase sets the Phase field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Phase field is set to the value of the last call.
func (b *VpcEgressGatewayStatusApplyConfiguration) WithPhase(value kubeovnv1.Phase) *VpcEgressGatewayStatusApplyConfiguration {
	b.Phase = &value
	return b
}

// WithInternalIPs adds the given value to the InternalIPs field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the InternalIPs field.
func (b *VpcEgressGatewayStatusApplyConfiguration) WithInternalIPs(values ...string) *VpcEgressGatewayStatusApplyConfiguration {
	for i := range values {
		b.InternalIPs = append(b.InternalIPs, values[i])
	}
	return b
}

// WithExternalIPs adds the given value to the ExternalIPs field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ExternalIPs field.
func (b *VpcEgressGatewayStatusApplyConfiguration) WithExternalIPs(values ...string) *VpcEgressGatewayStatusApplyConfiguration {
	for i := range values {
		b.ExternalIPs = append(b.ExternalIPs, values[i])
	}
	return b
}

// WithConditions sets the Conditions field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Conditions field is set to the value of the last call.
func (b *VpcEgressGatewayStatusApplyConfiguration) WithConditions(value kubeovnv1.Conditions) *VpcEgressGatewayStatusApplyConfiguration {
	b.Conditions = &value
	return b
}

// WithWorkload sets the Workload field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Workload field is set to the value of the last call.
func (b *VpcEgressGatewayStatusApplyConfiguration) WithWorkload(value *VpcEgressWorkloadApplyConfiguration) *VpcEgressGatewayStatusApplyConfiguration {
	b.Workload = value
	return b
}
