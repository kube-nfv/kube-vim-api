// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	kubeovnv1 "github.com/kube-nfv/kube-vim-api/kube-ovn-api/pkg/apis/kubeovn/v1"
)

// SecurityGroupRuleApplyConfiguration represents a declarative configuration of the SecurityGroupRule type for use
// with apply.
type SecurityGroupRuleApplyConfiguration struct {
	IPVersion           *string                 `json:"ipVersion,omitempty"`
	Protocol            *kubeovnv1.SgProtocol   `json:"protocol,omitempty"`
	Priority            *int                    `json:"priority,omitempty"`
	RemoteType          *kubeovnv1.SgRemoteType `json:"remoteType,omitempty"`
	RemoteAddress       *string                 `json:"remoteAddress,omitempty"`
	RemoteSecurityGroup *string                 `json:"remoteSecurityGroup,omitempty"`
	PortRangeMin        *int                    `json:"portRangeMin,omitempty"`
	PortRangeMax        *int                    `json:"portRangeMax,omitempty"`
	Policy              *kubeovnv1.SgPolicy     `json:"policy,omitempty"`
}

// SecurityGroupRuleApplyConfiguration constructs a declarative configuration of the SecurityGroupRule type for use with
// apply.
func SecurityGroupRule() *SecurityGroupRuleApplyConfiguration {
	return &SecurityGroupRuleApplyConfiguration{}
}

// WithIPVersion sets the IPVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IPVersion field is set to the value of the last call.
func (b *SecurityGroupRuleApplyConfiguration) WithIPVersion(value string) *SecurityGroupRuleApplyConfiguration {
	b.IPVersion = &value
	return b
}

// WithProtocol sets the Protocol field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Protocol field is set to the value of the last call.
func (b *SecurityGroupRuleApplyConfiguration) WithProtocol(value kubeovnv1.SgProtocol) *SecurityGroupRuleApplyConfiguration {
	b.Protocol = &value
	return b
}

// WithPriority sets the Priority field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Priority field is set to the value of the last call.
func (b *SecurityGroupRuleApplyConfiguration) WithPriority(value int) *SecurityGroupRuleApplyConfiguration {
	b.Priority = &value
	return b
}

// WithRemoteType sets the RemoteType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RemoteType field is set to the value of the last call.
func (b *SecurityGroupRuleApplyConfiguration) WithRemoteType(value kubeovnv1.SgRemoteType) *SecurityGroupRuleApplyConfiguration {
	b.RemoteType = &value
	return b
}

// WithRemoteAddress sets the RemoteAddress field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RemoteAddress field is set to the value of the last call.
func (b *SecurityGroupRuleApplyConfiguration) WithRemoteAddress(value string) *SecurityGroupRuleApplyConfiguration {
	b.RemoteAddress = &value
	return b
}

// WithRemoteSecurityGroup sets the RemoteSecurityGroup field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RemoteSecurityGroup field is set to the value of the last call.
func (b *SecurityGroupRuleApplyConfiguration) WithRemoteSecurityGroup(value string) *SecurityGroupRuleApplyConfiguration {
	b.RemoteSecurityGroup = &value
	return b
}

// WithPortRangeMin sets the PortRangeMin field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PortRangeMin field is set to the value of the last call.
func (b *SecurityGroupRuleApplyConfiguration) WithPortRangeMin(value int) *SecurityGroupRuleApplyConfiguration {
	b.PortRangeMin = &value
	return b
}

// WithPortRangeMax sets the PortRangeMax field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PortRangeMax field is set to the value of the last call.
func (b *SecurityGroupRuleApplyConfiguration) WithPortRangeMax(value int) *SecurityGroupRuleApplyConfiguration {
	b.PortRangeMax = &value
	return b
}

// WithPolicy sets the Policy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Policy field is set to the value of the last call.
func (b *SecurityGroupRuleApplyConfiguration) WithPolicy(value kubeovnv1.SgPolicy) *SecurityGroupRuleApplyConfiguration {
	b.Policy = &value
	return b
}
