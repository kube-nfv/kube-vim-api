// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	context "context"

	kubeovnv1 "github.com/kube-nfv/kube-vim-api/kube-ovn-api/pkg/apis/kubeovn/v1"
	applyconfigurationkubeovnv1 "github.com/kube-nfv/kube-vim-api/kube-ovn-api/pkg/client/applyconfiguration/kubeovn/v1"
	scheme "github.com/kube-nfv/kube-vim-api/kube-ovn-api/pkg/client/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// SubnetsGetter has a method to return a SubnetInterface.
// A group's client should implement this interface.
type SubnetsGetter interface {
	Subnets() SubnetInterface
}

// SubnetInterface has methods to work with Subnet resources.
type SubnetInterface interface {
	Create(ctx context.Context, subnet *kubeovnv1.Subnet, opts metav1.CreateOptions) (*kubeovnv1.Subnet, error)
	Update(ctx context.Context, subnet *kubeovnv1.Subnet, opts metav1.UpdateOptions) (*kubeovnv1.Subnet, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, subnet *kubeovnv1.Subnet, opts metav1.UpdateOptions) (*kubeovnv1.Subnet, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*kubeovnv1.Subnet, error)
	List(ctx context.Context, opts metav1.ListOptions) (*kubeovnv1.SubnetList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *kubeovnv1.Subnet, err error)
	Apply(ctx context.Context, subnet *applyconfigurationkubeovnv1.SubnetApplyConfiguration, opts metav1.ApplyOptions) (result *kubeovnv1.Subnet, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, subnet *applyconfigurationkubeovnv1.SubnetApplyConfiguration, opts metav1.ApplyOptions) (result *kubeovnv1.Subnet, err error)
	SubnetExpansion
}

// subnets implements SubnetInterface
type subnets struct {
	*gentype.ClientWithListAndApply[*kubeovnv1.Subnet, *kubeovnv1.SubnetList, *applyconfigurationkubeovnv1.SubnetApplyConfiguration]
}

// newSubnets returns a Subnets
func newSubnets(c *KubeovnV1Client) *subnets {
	return &subnets{
		gentype.NewClientWithListAndApply[*kubeovnv1.Subnet, *kubeovnv1.SubnetList, *applyconfigurationkubeovnv1.SubnetApplyConfiguration](
			"subnets",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *kubeovnv1.Subnet { return &kubeovnv1.Subnet{} },
			func() *kubeovnv1.SubnetList { return &kubeovnv1.SubnetList{} },
		),
	}
}
