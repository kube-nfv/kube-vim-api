// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/kube-nfv/kube-vim-api/kube-ovn-api/pkg/apis/kubeovn/v1"
	kubeovnv1 "github.com/kube-nfv/kube-vim-api/kube-ovn-api/pkg/client/applyconfiguration/kubeovn/v1"
	typedkubeovnv1 "github.com/kube-nfv/kube-vim-api/kube-ovn-api/pkg/client/clientset/versioned/typed/kubeovn/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeSwitchLBRules implements SwitchLBRuleInterface
type fakeSwitchLBRules struct {
	*gentype.FakeClientWithListAndApply[*v1.SwitchLBRule, *v1.SwitchLBRuleList, *kubeovnv1.SwitchLBRuleApplyConfiguration]
	Fake *FakeKubeovnV1
}

func newFakeSwitchLBRules(fake *FakeKubeovnV1) typedkubeovnv1.SwitchLBRuleInterface {
	return &fakeSwitchLBRules{
		gentype.NewFakeClientWithListAndApply[*v1.SwitchLBRule, *v1.SwitchLBRuleList, *kubeovnv1.SwitchLBRuleApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("switch-lb-rules"),
			v1.SchemeGroupVersion.WithKind("SwitchLBRule"),
			func() *v1.SwitchLBRule { return &v1.SwitchLBRule{} },
			func() *v1.SwitchLBRuleList { return &v1.SwitchLBRuleList{} },
			func(dst, src *v1.SwitchLBRuleList) { dst.ListMeta = src.ListMeta },
			func(list *v1.SwitchLBRuleList) []*v1.SwitchLBRule { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.SwitchLBRuleList, items []*v1.SwitchLBRule) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
