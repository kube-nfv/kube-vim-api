// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	context "context"

	kubeovnv1 "github.com/kube-nfv/kube-vim-api/kube-ovn-api/pkg/apis/kubeovn/v1"
	applyconfigurationkubeovnv1 "github.com/kube-nfv/kube-vim-api/kube-ovn-api/pkg/client/applyconfiguration/kubeovn/v1"
	scheme "github.com/kube-nfv/kube-vim-api/kube-ovn-api/pkg/client/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// SwitchLBRulesGetter has a method to return a SwitchLBRuleInterface.
// A group's client should implement this interface.
type SwitchLBRulesGetter interface {
	SwitchLBRules() SwitchLBRuleInterface
}

// SwitchLBRuleInterface has methods to work with SwitchLBRule resources.
type SwitchLBRuleInterface interface {
	Create(ctx context.Context, switchLBRule *kubeovnv1.SwitchLBRule, opts metav1.CreateOptions) (*kubeovnv1.SwitchLBRule, error)
	Update(ctx context.Context, switchLBRule *kubeovnv1.SwitchLBRule, opts metav1.UpdateOptions) (*kubeovnv1.SwitchLBRule, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, switchLBRule *kubeovnv1.SwitchLBRule, opts metav1.UpdateOptions) (*kubeovnv1.SwitchLBRule, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*kubeovnv1.SwitchLBRule, error)
	List(ctx context.Context, opts metav1.ListOptions) (*kubeovnv1.SwitchLBRuleList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *kubeovnv1.SwitchLBRule, err error)
	Apply(ctx context.Context, switchLBRule *applyconfigurationkubeovnv1.SwitchLBRuleApplyConfiguration, opts metav1.ApplyOptions) (result *kubeovnv1.SwitchLBRule, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, switchLBRule *applyconfigurationkubeovnv1.SwitchLBRuleApplyConfiguration, opts metav1.ApplyOptions) (result *kubeovnv1.SwitchLBRule, err error)
	SwitchLBRuleExpansion
}

// switchLBRules implements SwitchLBRuleInterface
type switchLBRules struct {
	*gentype.ClientWithListAndApply[*kubeovnv1.SwitchLBRule, *kubeovnv1.SwitchLBRuleList, *applyconfigurationkubeovnv1.SwitchLBRuleApplyConfiguration]
}

// newSwitchLBRules returns a SwitchLBRules
func newSwitchLBRules(c *KubeovnV1Client) *switchLBRules {
	return &switchLBRules{
		gentype.NewClientWithListAndApply[*kubeovnv1.SwitchLBRule, *kubeovnv1.SwitchLBRuleList, *applyconfigurationkubeovnv1.SwitchLBRuleApplyConfiguration](
			"switch-lb-rules",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *kubeovnv1.SwitchLBRule { return &kubeovnv1.SwitchLBRule{} },
			func() *kubeovnv1.SwitchLBRuleList { return &kubeovnv1.SwitchLBRuleList{} },
		),
	}
}
