// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/kube-nfv/kube-vim-api/kube-ovn-api/pkg/apis/kubeovn/v1"
	kubeovnv1 "github.com/kube-nfv/kube-vim-api/kube-ovn-api/pkg/client/applyconfiguration/kubeovn/v1"
	typedkubeovnv1 "github.com/kube-nfv/kube-vim-api/kube-ovn-api/pkg/client/clientset/versioned/typed/kubeovn/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeOvnSnatRules implements OvnSnatRuleInterface
type fakeOvnSnatRules struct {
	*gentype.FakeClientWithListAndApply[*v1.OvnSnatRule, *v1.OvnSnatRuleList, *kubeovnv1.OvnSnatRuleApplyConfiguration]
	Fake *FakeKubeovnV1
}

func newFakeOvnSnatRules(fake *FakeKubeovnV1) typedkubeovnv1.OvnSnatRuleInterface {
	return &fakeOvnSnatRules{
		gentype.NewFakeClientWithListAndApply[*v1.OvnSnatRule, *v1.OvnSnatRuleList, *kubeovnv1.OvnSnatRuleApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("ovn-snat-rules"),
			v1.SchemeGroupVersion.WithKind("OvnSnatRule"),
			func() *v1.OvnSnatRule { return &v1.OvnSnatRule{} },
			func() *v1.OvnSnatRuleList { return &v1.OvnSnatRuleList{} },
			func(dst, src *v1.OvnSnatRuleList) { dst.ListMeta = src.ListMeta },
			func(list *v1.OvnSnatRuleList) []*v1.OvnSnatRule { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.OvnSnatRuleList, items []*v1.OvnSnatRule) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
